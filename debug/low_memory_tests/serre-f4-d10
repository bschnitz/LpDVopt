                     SINGULAR                                 /  Development
 A Computer Algebra System for Polynomial Computations       /   version spielwiese
                                                           0<
 by: W. Decker, G.-M. Greuel, G. Pfister, H. Schoenemann     \   
FB Mathematik der Universitaet, D-67653 Kaiserslautern        \
// ** executing /home/ben/data/coding/box/LpDVec/Singular/LIB/.singularrc
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/freegb.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/bfun.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/presolve.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/elim.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/poly.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/ring.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/primdec.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/absfact.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/triang.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/random.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/matrix.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/general.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/inout.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/nctools.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/dmodapp.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/sing.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/gkdim.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/dmod.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/control.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/homolog.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/deform.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/gmssing.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/linalg.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/qhmoduli.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/rinvar.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/zeroset.lib $Id$
// ** loaded /home/ben/data/coding/box/LpDVec/Singular/LIB/primitiv.lib $Id$
[7:21]2(8)s(7)s(6)s3sss(7)s(9)ss4(11)-s(13)-----s5(12)s(17)-s(21)s(27)s(28)s(32)-s(35)s(38)6---s(43)--------s(38)----s(37)---7---s(38)----s(39)---s(40)------s8(38)--------s(34)s(38)------s(37)---9--s(35)---------s(28)----s(25)---10----------------s(5)-----
(S:31)-------------------------------
product criterion:480 chain criterion:29
shift V criterion:4537
f2(1)*f3(2)-f3(1)*f2(2),f1(1)*f4(2)-f4(1)*f1(2),f1(1)*f2(2)-f2(1)*f1(2),f3(1)*f4(2)*f4(3)-2*f4(1)*f3(2)*f4(3)+f4(1)*f4(2)*f3(3),f2(1)*f4(2)*f4(3)-2*f4(1)*f2(2)*f4(3)+f4(1)*f4(2)*f2(3),f2(1)*f2(2)*f4(3)-2*f2(1)*f4(2)*f2(3)+f4(1)*f2(2)*f2(3),f1(1)*f3(2)*f3(3)-2*f3(1)*f1(2)*f3(3)+f3(1)*f3(2)*f1(3),f1(1)*f3(2)*f2(3)-f2(1)*f1(2)*f3(3),f1(1)*f1(2)*f3(3)-2*f1(1)*f3(2)*f1(3)+f3(1)*f1(2)*f1(3),f3(1)*f3(2)*f3(3)*f4(4)-3*f3(1)*f3(2)*f4(3)*f3(4)+3*f3(1)*f4(2)*f3(3)*f3(4)-f4(1)*f3(2)*f3(3)*f3(4),f2(1)*f4(2)*f3(3)*f4(4)-f3(1)*f4(2)*f2(3)*f4(4)-f4(1)*f2(2)*f4(3)*f3(4)+f4(1)*f3(2)*f4(3)*f2(4),f3(1)*f3(2)*f4(3)*f3(4)*f4(5)-3*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)+2*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)+3*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)-5*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)+2*f4(1)*f4(2)*f3(3)*f3(4)*f3(5),f2(1)*f4(2)*f3(3)*f3(4)*f3(5)-3*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)+3*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)-f3(1)*f3(2)*f3(3)*f2(4)*f4(5),f2(1)*f4(2)*f2(3)*f4(4)*f3(5)-2*f2(1)*f4(2)*f3(3)*f2(4)*f4(5)+f3(1)*f2(2)*f4(3)*f2(4)*f4(5)-f3(1)*f4(2)*f2(3)*f4(4)*f2(5)-f4(1)*f2(2)*f4(3)*f3(4)*f2(5)+2*f4(1)*f3(2)*f2(3)*f4(4)*f2(5),f1(1)*f3(2)*f4(3)*f3(4)*f4(5)-2*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)+f3(1)*f4(2)*f3(3)*f4(4)*f1(5)-f4(1)*f1(2)*f3(3)*f4(4)*f3(5)+2*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)-f4(1)*f3(2)*f4(3)*f3(4)*f1(5),f1(1)*f3(2)*f4(3)*f3(4)*f3(5)-2*f3(1)*f1(2)*f3(3)*f4(4)*f3(5)+f3(1)*f3(2)*f1(3)*f3(4)*f4(5)+f3(1)*f3(2)*f4(3)*f1(4)*f3(5)-2*f3(1)*f3(2)*f4(3)*f3(4)*f1(5)+2*f3(1)*f4(2)*f3(3)*f3(4)*f1(5)-f4(1)*f3(2)*f3(3)*f1(4)*f3(5),f1(1)*f3(2)*f4(3)*f2(4)*f4(5)-f2(1)*f4(2)*f1(3)*f3(4)*f4(5)-f4(1)*f1(2)*f3(3)*f4(4)*f2(5)+f4(1)*f2(2)*f4(3)*f1(4)*f3(5),f1(1)*f3(2)*f4(3)*f2(4)*f2(5)-2*f2(1)*f1(2)*f3(3)*f4(4)*f2(5)+f2(1)*f2(2)*f1(3)*f3(4)*f4(5),f2(1)*f4(2)*f3(3)*f3(4)*f4(5)*f3(6)-f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f4(6)+f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)+f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)-f3(1)*f4(2)*f2(3)*f4(4)*f3(5)*f3(6)-f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)-f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f2(6)-f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)+f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)+f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f2(6),f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f2(6)-2*f2(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)+f2(1)*f2(2)*f1(3)*f3(4)*f4(5)*f3(6),f1(1)*f3(2)*f1(3)*f3(4)*f4(5)*f3(6)-2*f1(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)-f3(1)*f1(2)*f3(3)*f1(4)*f3(5)*f4(6)-f3(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)+2*f3(1)*f1(2)*f3(3)*f4(4)*f3(5)*f1(6)+f3(1)*f3(2)*f1(3)*f3(4)*f4(5)*f1(6)-2*f3(1)*f3(2)*f4(3)*f3(4)*f1(5)*f1(6)+f3(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)-f3(1)*f4(2)*f3(3)*f1(4)*f3(5)*f1(6)+2*f3(1)*f4(2)*f3(3)*f3(4)*f1(5)*f1(6)+f4(1)*f3(2)*f1(3)*f3(4)*f1(5)*f3(6)-f4(1)*f3(2)*f3(3)*f1(4)*f3(5)*f1(6),f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)-3*f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)+2*f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)+3*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)-5*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)*f2(6)*f4(7)+2*f3(1)*f3(2)*f3(3)*f2(4)*f4(5)*f2(6)*f4(7)-f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f2(7)-2*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)+3*f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f2(7)-f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f2(7)+3*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)-2*f4(1)*f3(2)*f3(3)*f3(4)*f2(5)*f4(6)*f2(7),f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f2(7)-f2(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)+f2(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)-2*f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f1(6)*f3(7)+f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f1(7)+2*f3(1)*f2(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)-f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)-2*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f2(7)+f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f2(6)*f1(7)-f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)+2*f4(1)*f3(2)*f2(3)*f4(4)*f2(5)*f1(6)*f3(7)-f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f2(6)*f1(7),f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f3(7)-2*f1(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)+f3(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)-f3(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)+f3(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)-2*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)+2*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)-f3(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)+2*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f1(6)*f1(7)+f3(1)*f4(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)-2*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f1(6)*f1(7)-2*f4(1)*f1(2)*f3(3)*f4(4)*f3(5)*f1(6)*f3(7)+f4(1)*f3(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)+2*f4(1)*f3(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)-2*f4(1)*f3(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)-f4(1)*f3(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)+2*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f1(6)*f1(7)+2*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)-5*f4(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f1(7)+2*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)*f1(6)*f1(7)+f4(1)*f4(2)*f3(3)*f1(4)*f3(5)*f1(6)*f3(7),f1(1)*f3(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)-3*f1(1)*f3(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)+3*f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)-3*f1(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f1(7)-4*f3(1)*f1(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)+12*f3(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)-3*f3(1)*f1(2)*f3(3)*f4(4)*f3(5)*f1(6)*f1(7)+6*f3(1)*f3(2)*f1(3)*f3(4)*f4(5)*f1(6)*f1(7)-12*f3(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f1(7)-3*f3(1)*f3(2)*f4(3)*f3(4)*f1(5)*f1(6)*f1(7)-6*f3(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f1(7)+12*f3(1)*f4(2)*f3(3)*f1(4)*f3(5)*f1(6)*f1(7)+3*f3(1)*f4(2)*f3(3)*f3(4)*f1(5)*f1(6)*f1(7)-f4(1)*f1(2)*f3(3)*f1(4)*f3(5)*f1(6)*f3(7)+4*f4(1)*f3(2)*f1(3)*f3(4)*f1(5)*f3(6)*f1(7)-6*f4(1)*f3(2)*f3(3)*f1(4)*f3(5)*f1(6)*f1(7),f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f3(8)-f2(1)*f4(2)*f3(3)*f3(4)*f1(5)*f3(6)*f4(7)*f3(8)-2*f3(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f3(8)+2*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f1(6)*f3(7)*f4(8)+2*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f4(6)*f1(7)*f3(8)+f3(1)*f3(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)*f4(8)+f3(1)*f3(2)*f2(3)*f4(4)*f1(5)*f3(6)*f4(7)*f3(8)-2*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)*f1(6)*f3(7)*f4(8)-3*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f4(7)*f1(8)+f3(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)+f3(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)-4*f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f1(7)*f3(8)+f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f3(7)*f1(8)-2*f3(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)-2*f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)-2*f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)+12*f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)+9*f3(1)*f3(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)*f1(8)-3*f3(1)*f3(2)*f4(3)*f3(4)*f3(5)*f4(6)*f2(7)*f1(8)+2*f3(1)*f4(2)*f3(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)+2*f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)+2*f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)-12*f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)-12*f3(1)*f4(2)*f3(3)*f3(4)*f3(5)*f2(6)*f4(7)*f1(8)+2*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)-f4(1)*f3(2)*f3(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)-f4(1)*f3(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)+4*f4(1)*f3(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)+4*f4(1)*f3(2)*f3(3)*f3(4)*f3(5)*f2(6)*f4(7)*f1(8),f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f2(8)-f2(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f3(8)+2*f2(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)-f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f1(7)*f3(8)-f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)-f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)+2*f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)+2*f3(1)*f2(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)-3*f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)+f3(1)*f3(2)*f2(3)*f4(4)*f2(5)*f4(6)*f1(7)*f3(8)-f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f2(6)*f1(7)*f3(8)-2*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)+3*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f2(6)*f1(7)*f3(8)-2*f4(1)*f3(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)+f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f2(6)*f1(7)*f3(8)+f4(1)*f3(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f2(8)+f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f2(6)*f1(7)*f3(8)-2*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)*f1(8),f1(1)*f3(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f4(8)-3*f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)+2*f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)+3*f1(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)*f1(8)-4*f3(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)*f1(8)+6*f3(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f1(8)+6*f3(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)*f1(8)-8*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)+3*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)*f1(8)-12*f3(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)*f1(8)-3*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f1(6)*f1(7)*f1(8)+6*f3(1)*f4(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)*f1(8)+3*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f1(6)*f1(7)*f1(8)+3*f4(1)*f1(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)-5*f4(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)+3*f4(1)*f1(2)*f3(3)*f4(4)*f3(5)*f1(6)*f3(7)*f1(8)-12*f4(1)*f3(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)+3*f4(1)*f3(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)*f1(8)+12*f4(1)*f3(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)*f1(8)+3*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f1(6)*f1(7)*f1(8)+14*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f1(8)-24*f4(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f1(7)*f1(8)-3*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)*f1(6)*f1(7)*f1(8)+2*f4(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f1(7)*f3(8)-8*f4(1)*f4(2)*f3(3)*f1(4)*f3(5)*f1(6)*f3(7)*f1(8)+12*f4(1)*f4(2)*f3(3)*f3(4)*f1(5)*f3(6)*f1(7)*f1(8),f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f3(8)*f4(9)-2*f2(1)*f4(2)*f3(3)*f3(4)*f4(5)*f2(6)*f4(7)*f3(8)*f3(9)-4*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f4(6)*f2(7)*f4(8)*f3(9)-2*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f4(7)*f2(8)*f4(9)+6*f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f2(7)*f4(8)*f3(9)+2*f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f3(7)*f4(8)*f2(9)+14*f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f2(8)*f4(9)+f3(1)*f3(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)*f2(8)*f4(9)-2*f3(1)*f3(2)*f4(3)*f3(4)*f3(5)*f4(6)*f2(7)*f4(8)*f2(9)+8*f3(1)*f4(2)*f2(3)*f4(4)*f3(5)*f3(6)*f2(7)*f4(8)*f3(9)-8*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)*f4(8)*f3(9)-8*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)*f2(8)*f4(9)+4*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)*f4(8)*f2(9)-8*f3(1)*f4(2)*f3(3)*f3(4)*f3(5)*f2(6)*f4(7)*f2(8)*f4(9)-12*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f2(6)*f4(7)*f3(8)*f2(9)-18*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f3(6)*f2(7)*f4(8)*f2(9)-2*f3(1)*f4(2)*f3(3)*f4(4)*f2(5)*f4(6)*f3(7)*f3(8)*f2(9)+4*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f3(8)*f2(9)+10*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f3(6)*f2(7)*f4(8)*f2(9)+36*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f3(6)*f4(7)*f2(8)*f2(9)-24*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f4(6)*f3(7)*f2(8)*f2(9)+f4(1)*f2(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)*f3(8)*f3(9)-4*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f2(7)*f4(8)*f3(9)+6*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)*f4(8)*f3(9)+2*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)*f2(8)*f4(9)+2*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)*f4(8)*f2(9)-2*f4(1)*f3(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f2(8)*f4(9)+4*f4(1)*f3(2)*f3(3)*f3(4)*f3(5)*f2(6)*f4(7)*f2(8)*f4(9)-6*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f3(8)*f2(9)+15*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f3(6)*f2(7)*f4(8)*f2(9)-14*f4(1)*f3(2)*f3(3)*f4(4)*f3(5)*f3(6)*f4(7)*f2(8)*f2(9)+2*f4(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f3(8)*f2(9)-8*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)*f3(8)*f2(9)-18*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)*f3(6)*f2(7)*f4(8)*f2(9)-16*f4(1)*f3(2)*f4(3)*f3(4)*f3(5)*f4(6)*f3(7)*f2(8)*f2(9)+72*f4(1)*f3(2)*f4(3)*f3(4)*f4(5)*f3(6)*f3(7)*f2(8)*f2(9)-2*f4(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f3(8)*f2(9)+6*f4(1)*f4(2)*f3(3)*f3(4)*f3(5)*f2(6)*f4(7)*f3(8)*f2(9)+6*f4(1)*f4(2)*f3(3)*f3(4)*f3(5)*f3(6)*f2(7)*f4(8)*f2(9)+2*f4(1)*f4(2)*f3(3)*f3(4)*f4(5)*f3(6)*f3(7)*f2(8)*f2(9)-92*f4(1)*f4(2)*f3(3)*f4(4)*f3(5)*f3(6)*f3(7)*f2(8)*f2(9)+48*f4(1)*f4(2)*f4(3)*f3(4)*f3(5)*f3(6)*f3(7)*f2(8)*f2(9),f1(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)*f2(9)-2*f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)*f2(9)-f2(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f3(9)+2*f2(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f1(7)*f3(8)*f4(9)+2*f2(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f1(8)*f3(9)-f2(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)-2*f2(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)*f1(9)-4*f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)+5*f2(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f1(7)*f3(8)*f1(9)+2*f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)+f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)-8*f2(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)+f3(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f2(9)-f3(1)*f2(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f4(9)-f3(1)*f2(2)*f4(3)*f2(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)+2*f3(1)*f2(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)-2*f3(1)*f2(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)*f1(9)+f3(1)*f2(2)*f4(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)+f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)-f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)+6*f3(1)*f2(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)+4*f3(1)*f2(2)*f4(3)*f3(4)*f3(5)*f2(6)*f4(7)*f1(8)*f1(9)+f3(1)*f3(2)*f2(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)-10*f3(1)*f3(2)*f2(3)*f4(4)*f3(5)*f2(6)*f4(7)*f1(8)*f1(9)+4*f3(1)*f3(2)*f3(3)*f2(4)*f4(5)*f2(6)*f4(7)*f1(8)*f1(9)-f3(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)-2*f3(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f2(7)*f1(8)*f1(9)+f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f2(9)-2*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)+2*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)*f1(9)-f3(1)*f4(2)*f2(3)*f4(4)*f2(5)*f1(6)*f3(7)*f1(8)*f3(9)-f3(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)+f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f2(6)*f1(7)*f3(8)*f1(9)-6*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)*f1(8)*f1(9)+8*f3(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f2(7)*f1(8)*f1(9)-2*f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)*f1(8)*f3(9)+f4(1)*f3(2)*f2(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f2(9)+2*f4(1)*f3(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)*f1(9)+4*f4(1)*f3(2)*f2(3)*f4(4)*f2(5)*f1(6)*f3(7)*f1(8)*f3(9)-5*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f2(6)*f1(7)*f3(8)*f1(9)-2*f4(1)*f3(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)-f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f2(6)*f1(7)*f3(8)*f1(9)+8*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f2(7)*f1(8)*f1(9)-4*f4(1)*f3(2)*f3(3)*f3(4)*f2(5)*f4(6)*f2(7)*f1(8)*f1(9),f1(1)*f3(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f4(9)-f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f2(9)+f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)-f1(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)+f1(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)+f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)-f2(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)+f2(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)+f2(1)*f1(2)*f3(3)*f4(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)+f2(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)-2*f2(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)+f2(1)*f4(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)*f3(8)*f1(9)-4*f2(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f1(9)+f2(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f3(7)*f1(8)*f1(9)+4*f2(1)*f4(2)*f3(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)*f1(9)-4*f3(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)+f3(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f1(8)*f1(9)+2*f3(1)*f2(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)-4*f3(1)*f2(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f1(9)+f3(1)*f2(2)*f4(3)*f1(4)*f3(5)*f4(6)*f3(7)*f1(8)*f1(9)-4*f3(1)*f2(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)*f1(8)*f1(9)+4*f3(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f1(9)+4*f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f1(9)+2*f3(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)-4*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f1(9)+f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)*f1(8)*f1(9)+2*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)+6*f3(1)*f4(2)*f2(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f1(9)-6*f3(1)*f4(2)*f2(3)*f4(4)*f3(5)*f1(6)*f3(7)*f1(8)*f1(9)+f3(1)*f4(2)*f2(3)*f4(4)*f3(5)*f3(6)*f1(7)*f1(8)*f1(9)-4*f3(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f1(9)-4*f3(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f1(9)+f4(1)*f1(2)*f3(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)-2*f4(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f1(8)*f3(9)+f4(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f1(7)*f3(8)*f1(9)+f4(1)*f2(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)-f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)+f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)*f3(8)*f1(9)+2*f4(1)*f2(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f1(8)*f3(9)-2*f4(1)*f2(2)*f4(3)*f3(4)*f1(5)*f3(6)*f1(7)*f3(8)*f1(9)+2*f4(1)*f2(2)*f4(3)*f3(4)*f3(5)*f1(6)*f3(7)*f1(8)*f1(9)-4*f4(1)*f3(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f1(9)+f4(1)*f3(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)*f1(8)*f1(9)-4*f4(1)*f3(2)*f2(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f1(9)+f4(1)*f3(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f1(8)*f1(9)+2*f4(1)*f3(2)*f2(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f1(9)-4*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f1(6)*f3(7)*f1(8)*f1(9)-3*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f1(7)*f1(8)*f1(9)+4*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f1(9)+3*f4(1)*f3(2)*f3(3)*f2(4)*f4(5)*f3(6)*f1(7)*f1(8)*f1(9)-f4(1)*f3(2)*f3(3)*f3(4)*f2(5)*f4(6)*f1(7)*f1(8)*f1(9)+4*f4(1)*f3(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f1(8)*f1(9),f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f4(9)*f2(10)-3*f1(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)*f4(10)+3*f1(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f4(10)-3*f1(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)*f4(9)*f1(10)-f2(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f4(10)+f2(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)*f4(10)-f2(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f4(8)*f1(9)*f3(10)+4*f3(1)*f2(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f4(9)*f1(10)-6*f3(1)*f3(2)*f4(3)*f2(4)*f4(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)-4*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f4(8)*f2(9)*f1(10)+12*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f4(9)*f1(10)-3*f3(1)*f4(2)*f1(3)*f3(4)*f4(5)*f3(6)*f2(7)*f4(8)*f1(9)*f1(10)-6*f3(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f4(9)*f1(10)-4*f3(1)*f4(2)*f2(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)*f1(10)+4*f3(1)*f4(2)*f2(3)*f4(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f1(10)+12*f3(1)*f4(2)*f3(3)*f2(4)*f4(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)+3*f3(1)*f4(2)*f3(3)*f3(4)*f4(5)*f2(6)*f4(7)*f1(8)*f1(9)*f1(10)+6*f3(1)*f4(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)*f1(10)-6*f3(1)*f4(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)-6*f3(1)*f4(2)*f3(3)*f4(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)*f1(10)+3*f3(1)*f4(2)*f3(3)*f4(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)*f1(10)-3*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f1(8)*f1(9)*f1(10)-3*f3(1)*f4(2)*f3(3)*f4(4)*f3(5)*f4(6)*f2(7)*f1(8)*f1(9)*f1(10)-f4(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)*f2(10)+f4(1)*f1(2)*f3(3)*f4(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)*f3(10)+3*f4(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f1(8)*f3(9)*f4(10)-3*f4(1)*f1(2)*f3(3)*f4(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)*f3(10)+3*f4(1)*f1(2)*f3(3)*f4(4)*f3(5)*f2(6)*f4(7)*f1(8)*f3(9)*f1(10)-3*f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)*f4(10)+3*f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f1(6)*f3(7)*f4(8)*f1(9)*f3(10)+3*f4(1)*f2(2)*f1(3)*f3(4)*f4(5)*f3(6)*f1(7)*f3(8)*f4(9)*f1(10)+f4(1)*f2(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)*f3(10)-f4(1)*f2(2)*f4(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f1(9)*f3(10)-4*f4(1)*f2(2)*f4(3)*f3(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)*f1(10)+6*f4(1)*f2(2)*f4(3)*f3(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)+6*f4(1)*f3(2)*f2(3)*f4(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)*f1(10)-12*f4(1)*f3(2)*f2(3)*f4(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f1(10)+3*f4(1)*f3(2)*f2(3)*f4(4)*f1(5)*f3(6)*f4(7)*f3(8)*f1(9)*f1(10)-12*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)-3*f4(1)*f3(2)*f2(3)*f4(4)*f3(5)*f3(6)*f4(7)*f1(8)*f1(9)*f1(10)+12*f4(1)*f3(2)*f3(3)*f4(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)*f1(10)+3*f4(1)*f3(2)*f3(3)*f4(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)*f1(10)+4*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f2(9)*f1(10)-4*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)*f1(10)+3*f4(1)*f3(2)*f4(3)*f1(4)*f3(5)*f4(6)*f3(7)*f2(8)*f1(9)*f1(10)-8*f4(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f1(7)*f3(8)*f4(9)*f1(10)+2*f4(1)*f3(2)*f4(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f1(10)+4*f4(1)*f3(2)*f4(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)*f1(10)-6*f4(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f1(7)*f3(8)*f1(9)*f1(10)+3*f4(1)*f3(2)*f4(3)*f2(4)*f4(5)*f3(6)*f3(7)*f1(8)*f1(9)*f1(10)-6*f4(1)*f3(2)*f4(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)*f1(10)+12*f4(1)*f3(2)*f4(3)*f3(4)*f2(5)*f1(6)*f3(7)*f4(8)*f1(9)*f1(10)-6*f4(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)*f1(10)-3*f4(1)*f3(2)*f4(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)*f1(10)+f4(1)*f4(2)*f1(3)*f3(4)*f1(5)*f3(6)*f4(7)*f2(8)*f1(9)*f3(10)-f4(1)*f4(2)*f1(3)*f3(4)*f4(5)*f2(6)*f1(7)*f3(8)*f1(9)*f3(10)-2*f4(1)*f4(2)*f2(3)*f1(4)*f3(5)*f1(6)*f3(7)*f4(8)*f1(9)*f3(10)+2*f4(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f1(7)*f3(8)*f1(9)*f3(10)-3*f4(1)*f4(2)*f2(3)*f1(4)*f3(5)*f4(6)*f3(7)*f1(8)*f3(9)*f1(10)+4*f4(1)*f4(2)*f2(3)*f4(4)*f3(5)*f1(6)*f3(7)*f1(8)*f3(9)*f1(10)-6*f4(1)*f4(2)*f2(3)*f4(4)*f3(5)*f3(6)*f1(7)*f3(8)*f1(9)*f1(10)-4*f4(1)*f4(2)*f3(3)*f1(4)*f3(5)*f4(6)*f2(7)*f1(8)*f3(9)*f1(10)+8*f4(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f1(8)*f3(9)*f1(10)-3*f4(1)*f4(2)*f3(3)*f2(4)*f1(5)*f3(6)*f4(7)*f3(8)*f1(9)*f1(10)-2*f4(1)*f4(2)*f3(3)*f2(4)*f4(5)*f1(6)*f3(7)*f1(8)*f3(9)*f1(10)+12*f4(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f1(7)*f3(8)*f1(9)*f1(10)+3*f4(1)*f4(2)*f3(3)*f2(4)*f4(5)*f3(6)*f3(7)*f1(8)*f1(9)*f1(10)-6*f4(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f1(7)*f3(8)*f1(9)*f1(10)-3*f4(1)*f4(2)*f3(3)*f3(4)*f2(5)*f4(6)*f3(7)*f1(8)*f1(9)*f1(10)

$Bye.
